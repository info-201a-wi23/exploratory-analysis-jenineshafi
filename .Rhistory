filter(date == str_sub(2020, start = 1L, end = 4L)) %>%
filter(month == str_sub("-01-", start = 5L, end = 8L))
month_highest_cases <- national %>%
filter(date == str_sub(2020, start = 1L, end = 4L)) %>%
filter(month == str_sub(01, start = 6L, end = 7L))
month_highest_cases <- national %>%
filter(date == str_sub(2020, start = 1L, end = 4L)) %>%
filter(date == str_sub(01, start = 6L, end = 7L))
month_highest_cases <- national %>%
filter(date == str_sub(2020, start = 1L, end = 4L)) %>%
mutate(january = (filter(date == str_sub(01, start = 6L, end = 7L))))
rlang::last_error()
month_highest_cases <- national %>%
filter(date == str_sub(2020, start = 1L, end = 4L)) %>%
mutate(january = (filter(date == str_sub(01, start = 6L, end = 7L))))
month_highest_cases <- national %>%
filter(date == str_sub(2020, start = 1L, end = 4L)) %>%
mutate("january" = (filter(date == str_sub(01, start = 6L, end = 7L))))
month_highest_cases <- national %>%
filter(date == str_sub(2020, start = 1L, end = 4L)) %>%
mutate(january = (filter(date == str_sub(01, start = 6L, end = 7L))))
month_highest_cases <- national %>%
filter(date == str_sub(2020, start = 1L, end = 4L)) %>%
mutate(january = (filter(date == str_sub(01, start = 6L, end = 7L))))
month_highest_cases <- national %>%
filter(date == str_sub(2020, start = 1L, end = 4L)) %>%
mutate(january = filter(date == str_sub(01, start = 6L, end = 7L)))
month_highest_cases <- national %>%
filter(date == str_sub(2020, start = 1L, end = 4L)) %>%
mutate(january = filter(date == str_sub(01, start = 6L, end = 7L)))
month_highest_cases <- national %>%
filter(date == str_sub(2020, start = 1L, end = 4L)) %>%
mutate(january = filter(date == str_sub(01, start = 6L, end = 7L)))
month_highest_cases <- national %>%
filter(date == str_sub(2020, start = 1L, end = 4L)) %>%
mutate(january =
filter(date == str_sub(01, start = 6L, end = 7L)))
month_highest_cases <- national %>% filter(date == str_sub(2020, start = 1L, end = 4L)) %>% mutate(january = filter(date == str_sub(01, start = 6L, end = 7L)))
View(month_highest_cases)
View(month_highest_cases)
?mutate
rlang::last_error()
rlang::last_trace()
month_highest_cases <- national %>%
filter(date == str_sub(2020, start = 1L, end = 4L)) %>%
mutate(january =
filter(date == str_sub(01, start = 6L, end = 7L)))
month_highest_cases <- national %>%
filter(date == str_sub(2020, start = 1L, end = 4L)) %>%
mutate(january =
filter(date == str_sub(01, start = 6L, end = 7L)))
month_highest_cases <- national %>%
filter(date == str_sub(2020, start = 1L, end = 4L)) %>%
mutate(january =
filter(date == str_sub(01, start = 6L, end = 6L)))
month_highest_cases <- national %>%
filter(date == str_sub(2020, start = 1L, end = 4L)) %>%
filter(date == str_sub(01, start = 6L, end = 7L))
month_highest_cases
View(all_totals)
View(all_totals)
View(counties)
View(counties)
View(total_cases_counties)
View(total_cases_counties)
total_cases_counties <- counties %>%
select(date, county, cases) %>%
group_by(date, county) %>%
mutate(date = date, county_total_cases = (sum(cases))) %>%
unique()
View(total_cases_counties)
View(total_cases_counties)
total_cases_counties <- counties %>%
group_by(date, county) %>%
mutate(date = date, county_total_cases = (sum(cases))) %>%
unique()
total_cases_counties <- counties %>%
group_by(date, county) %>%
mutate(date = date, county_total_cases = (sum(cases)))
total_cases_counties <- counties %>%
group_by(date, county) %>%
mutate(date = date, county_total_cases = (summarize(sum = sum(cases))))
total_cases_counties <- counties %>%
group_by(date, county) %>%
summarize(county_total_cases = sum(cases))
total_cases_counties <- counties %>%
group_by(date, county) %>%
summarize(county_total_cases = sum(cases))
# 4.b Join `total_cases_counties` with the `national` dataframe.
# Save this dataframe as `all_totals`.
all_totals <- left_join(total_cases_counties, national, by = "date")
# 4.c Filter the all_totals dataframe to find only the rows where the "county_total_cases" column does not match the "cases" column
# Save as national_county_diff
national_county_diff <- all_totals %>%
filter(county_total_cases != cases)
# 4.d Calculate the number of rows in the national_county_diff dataframe
# Save as num_national_county_diff
num_national_county_diff <- nrow(national_county_diff)
all_totals <- left_join(total_cases_counties, national, by = "date")
national_county_diff <- all_totals %>%
filter(county_total_cases != cases)
num_national_county_diff <- nrow(national_county_diff)
View(national_county_diff)
View(national_county_diff)
month_highest_cases <- national %>%
filter(date == str_sub(2020, start = 1L, end = 4L))
month_highest_cases <- national %>%
mutate(year = filter(date == str_sub(2020, start = 1L, end = 4L)))
month_highest_cases <- national %>%
mutate(year = (filter(date == str_sub(2020, start = 1L, end = 4L))))
library("stringr")
month_highest_cases <- national %>%
filter(date == str_sub(2020, start = 1L, end = 4L)) %>%
filter(date == str_sub(01, start = 6L, end = 7L))
month_highest_cases <- national %>%
filter(date == str_sub(2020, start = 1L, end = 4L)) %>%
mutate(month = filter(date == str_sub(01, start = 6L, end = 7L)))
month_highest_cases <- national %>%
filter(date == str_sub(2020, start = 1L, end = 4L)) %>%
filter(date == str_sub(01, start = 6L, end = 7L)) %>%
filter(max == max(cases))
month_highest_cases <- national %>%
filter(date == str_sub(2020, start = 1L, end = 4L)) %>%
filter(date == str_sub(01, start = 6L, end = 7L)) %>%
filter(max == max(cases, na.rm = TRUE))
month_highest_cases <- national %>%
filter(date == str_sub(2020, start = 1L, end = 4L)) %>%
filter(date == str_sub(01, start = 6L, end = 7L)) %>%
filter(max == max(cases))
month_highest_cases <- national %>%
filter(date == str_sub(2020, start = 1L, end = 4L)) %>%
filter(date == str_sub(01, start = 6L, end = 7L))
month_highest_cases <- national %>%
select(date, cases) %>%
filter(date == str_sub(2020, start = 1L, end = 4L)) %>%
filter(date == str_sub(01, start = 6L, end = 7L)) %>%
filter(max == max(cases))
month_highest_cases <- national %>%
select(date, cases) %>%
filter(date == str_sub(2020, start = 1L, end = 4L)) %>%
filter(date == str_sub(01, start = 6L, end = 7L)) %>%
filter(max == max(cases))
month_highest_cases <- national %>%
select(date, cases) %>%
filter(date == str_sub(2020, start = 1L, end = 4L)) %>%
filter(date == str_sub(01, start = 6L, end = 7L)) %>%
filter(max == max(cases, na.rm = TRUE))
month_highest_cases <- national %>%
select(date, cases) %>%
filter(date == str_sub(2020, start = 1L, end = 4L)) %>%
filter(date == str_sub(01, start = 6L, end = 7L)) %>%
filter(max == max(cases, na.rm = TRUE)) %>%
pull(cases)
month_highest_cases <- national %>%
select(date, cases) %>%
filter(date == str_sub(2020, start = 1L, end = 4L)) %>%
filter(date == str_sub(01, start = 6L, end = 7L))
month_highest_cases <- national %>%
select(date, cases) %>%
filter(date == str_sub(2020, start = 1L, end = 4L)) %>%
filter(date == str_sub(01, start = 6L, end = 6L))
month_highest_cases <- national %>%
select(date, cases) %>%
filter(date == str_sub(2020, start = 1L, end = 4L)) %>%
filter(date == str_sub(01, start = 7L, end = 7L))
month_highest_cases <- national %>%
select(date, cases) %>%
filter(date == str_sub(2020, start = 1L, end = 4L))
month_highest_cases <- national %>%
filter(date == str_sub(2020, start = 1L, end = 4L))
month_highest_cases <- national %>%
filter(date == str_sub(date, start = 1L, end = 4L))
?str_sub
month_highest_cases <- national %>%
filter(date == "2020")
month_highest_cases <- national %>%
filter(date == "2020-01-21")
month_highest_cases <- national %>%
filter(date == "2020-01-")
?filter
month_highest_cases <- national %>%
filter(date == between(date, 2020-01-21, 2020-01-31))
month_highest_cases <- national %>%
filter(date == between(date, "2020-01-21", "2020-01-31"))
month_highest_cases <- national %>%
filter(date >= 2020-01-21 & date <= 2020-01-31)
month_highest_cases <- national %>%
filter(date >= "2020-01-21" & date <= "2020-01-31")
month_highest_cases <- national %>%
filter(date >= "2020-01-21" & date <= "2020-12-31")
month_highest_cases <- national %>%
mutate(january = filter(date >= "2020-01-21" & date <= "2020-12-31"))
month_highest_cases <- national %>%
filter(date >= "2020-01-21" & date <= "2020-12-31") %>%
filter(date >= "2020-01-21" & date <= "2020-01-31")
month_highest_cases <- national %>%
filter(date >= "2020-01-21" & date <= "2020-12-31") %>%
filter(date >= "2020-01-21" & date <= "2020-01-31")
filter(max == max(cases, na.rm = TRUE))
month_highest_cases <- national %>%
select(date, cases)
filter(date >= "2020-01-21" & date <= "2020-12-31") %>%
filter(date >= "2020-01-21" & date <= "2020-01-31")
month_highest_cases <- national %>%
select(date, cases)
month_highest_cases <- national %>%
select(date, cases)
filter(date >= "2020-01-21" & date <= "2020-12-31")
month_highest_cases <- national %>%
select(date, cases)
filter(date >= "2020-01-21" & date <= "2020-01-31")
month_highest_cases <- national %>%
filter(date >= "2020-01-21" & date <= "2020-01-31")
month_highest_cases <- national %>%
filter(date >= "2020-01-21" & date <= "2020-01-31") %>%
filter(max == max(cases, na.rm = TRUE))
month_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-12-31")
month_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-12-31") %>%
filter(max == max(cases, na.rm = TRUE))
month_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-12-31") %>%
filter(max == max(cases))
month_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-12-31") %>%
filter(cases == max(cases))
month_highest_cases <- national %>%
filter(date == str_sub(date, start = 1L, end = 4L)) %>%
filter(date == str_sub(01, start = 7L, end = 7L)) %>%
filter(cases == max(cases, na.rm = TRUE))
month_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-12-31") %>%
filter(cases == max(cases))
month_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-12-31") %>%
mutate(max = filter(cases == max(cases)))
month_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-12-31") %>%
filter(cases == max(cases))
month_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-12-31")
?group_by
month_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-12-31") %>%
filter(date == str_sub(2022-01, start = 1L, end = 7L))
month_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-12-31") %>%
filter(date == str_sub("2022-01", start = 1L, end = 7L))
month_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-12-31")
month_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-12-31") %>%
filter(date == str_subset(date, "[01]{2}"))
month_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-12-31") %>%
filter(date == str_subset(date, "[-01-]{2}"))
month_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-12-31") %>%
filter(date == str_subset(date, "\-[01]{2}\-"))
month_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-12-31") %>%
filter(date == str_subset(date, "[1\-]{2}"))
library("stringr")
month_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-12-31") %>%
filter(date == str_subset(date, "[1\-]{2}"))
month_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-12-31") %>%
filter(date == str_subset(date, "[1\-]{2}"))
month_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-12-31") %>%
filter(date == str_subset(date, "\\-[01]{2}\\-"))
month_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-12-31") %>%
filter(date == str_subset(date, "[1\\-]{2}"))
month_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-12-31")
month_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-01-31") %>%
filter(cases == max(cases))
jan_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-01-31") %>%
filter(cases == max(cases))
feb_highest_cases <- national %>%
filter(date >= "2022-02-02" & date <= "2022-02-28") %>%
filter(cases == max(cases))
View(feb_highest_cases)
View(feb_highest_cases)
jan_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-01-31") %>%
filter(cases == max(cases))
feb_highest_cases <- national %>%
filter(date >= "2022-02-01" & date <= "2022-02-28") %>%
filter(cases == max(cases))
jan_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-01-31") %>%
filter(cases == max(cases))
feb_highest_cases <- national %>%
filter(date >= "2022-02-01" & date <= "2022-02-28") %>%
filter(cases == max(cases))
mar_highest_cases <- national %>%
filter(date >= "2022-03-01" & date <= "2022-03-31") %>%
filter(cases == max(cases))
apr_highest_cases <- national %>%
filter(date >= "2022-04-01" & date <= "2022-04-30") %>%
filter(cases == max(cases))
may_highest_cases <- national %>%
filter(date >= "2022-05-01" & date <= "2022-05-31") %>%
filter(cases == max(cases))
jun_highest_cases <- national %>%
filter(date >= "2022-06-01" & date <= "2022-06-30") %>%
filter(cases == max(cases))
jul_highest_cases <- national %>%
filter(date >= "2022-07-01" & date <= "2022-07-31") %>%
filter(cases == max(cases))
aug_highest_cases <- national %>%
filter(date >= "2022-08-01" & date <= "2022-08-31") %>%
filter(cases == max(cases))
sep_highest_cases <- national %>%
filter(date >= "2022-09-01" & date <= "2022-09-30") %>%
filter(cases == max(cases))
oct_highest_cases <- national %>%
filter(date >= "2022-10-01" & date <= "2022-10-31") %>%
filter(cases == max(cases))
nov_highest_cases <- national %>%
filter(date >= "2022-11-01" & date <= "2022-11-30") %>%
filter(cases == max(cases))
dec_highest_cases <- national %>%
filter(date >= "2022-12-01" & date <= "2022-12-31") %>%
filter(cases == max(cases))
year_highest_cases <- data.frame(jan_highest_cases, feb_highest_cases, mar_highest_cases)
View(year_highest_cases)
View(year_highest_cases)
year_highest_cases <- data.frame(2022 = c(jan_highest_cases, feb_highest_cases, mar_highest_cases))
year_highest_cases <- data.frame(year = c(jan_highest_cases, feb_highest_cases, mar_highest_cases))
View(year_highest_cases)
View(year_highest_cases)
df <- merge(jan_highest_cases, feb_highest_cases)
View(df)
View(df)
df <- merge(jan_highest_cases, feb_highest_cases, by = "date")
View(jan_highest_cases)
View(jan_highest_cases)
df <- rbind(jan_highest_cases, feb_highest_cases, mar_highest_cases)
View(df)
View(df)
year_highest_cases <- rbind(jan_highest_cases, feb_highest_cases,
mar_highest_cases, apr_highest_cases,
may_highest_cases, jun_highest_cases,
jul_highest_cases, aug_highest_cases,
sep_highest_cases, oct_highest_cases,
nov_highest_cases, dec_highest_cases)
?rbind
my_answer <- year_highest_cases %>%
filter(cases == max(cases))
pull(date)
View(my_answer)
View(my_answer)
jan_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-01-31") %>%
mutate(jan_cases = summarize(diff(date = "2022-01-01", date = "2022-01-31")))
jan_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-01-31") %>%
mutate(jan_cases = summarize(diff = diff(date = "2022-01-01", date = "2022-01-31")))
jan_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-01-31")
?diff
jan_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-01-31") %>%
summarize(jan_cases = diff(cases))
jan_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-01-31")
jan_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-01-31") %>%
summarize(jan_cases = diff(1:31))
jan_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-01-31")
jan_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-01-31") %>%
summarize(jan_cases = diff(cases, 1:31))
jan_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-01-31")
jan_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-01-31") %>%
summarize(jan_cases = diff(1:31))
jan_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-01-31")
march_beginning <- national %>%
filter(date = "2020-03-31" & date = "2021-03-31" & date = "2022-03-31")
march_beginning <- national %>%
filter(date = "2020-03-31")
march_beginning <- national %>%
filter(date == "2020-03-31" & date == "2021-03-31" & date == "2022-03-31")
View(march_beginning)
View(march_beginning)
march_beginning <- national %>%
filter(date == "2020-03-31" | date == "2021-03-31" | date == "2022-03-31")
march_beginning <- national %>%
filter(date == "2020-03-31" | date == "2021-03-31" | date == "2022-03-31")
pull(new_cases)
march_new_cases <- national %>%
filter(date == "2020-03-31" | date == "2021-03-31" | date == "2022-03-31")
pull(new_cases)
march_new_cases <- national %>%
filter(date == "2020-03-31" | date == "2021-03-31" | date == "2022-03-31") %>%
pull(new_cases)
march_new_cases <- national %>%
filter(date == "2020-03-31" | date == "2021-03-31" | date == "2022-03-31") %>%
pull(date, new_cases)
march_new_cases
obs_national <- nrow(national) # There are 1,107 rows in this dataset
obs_states <- nrow(states) # There are 59,086 rows in this dataset
obs_counties <- nrow(counties)
num_features_national <- ncol(national) # There are 5 columns in this dataset
num_features_states <- ncol(states) # There are 5 columns in this dataset
num_features_counties <- ncol(counties)
total_us_cases <- national %>%
filter(date == max(date, na.rm = TRUE)) %>%
pull(cases)
# There were 102,070,172 total U.S. cases
# 2.b How many total COVID-related deaths have there been in the U.S. by the most recent date in the dataset? Make sure to pull() this number `total_us_deaths`
total_us_deaths <- national %>%
filter(date == max(date, na.rm = TRUE)) %>%
pull(deaths)
state_highest_cases <- states %>%
filter(cases == max(cases, na.rm = TRUE)) %>%
pull(state)
# California has the highest number of cases
# 2.d What is the highest number of cases in a state? Make sure to pull() this number `num_highest_state`
num_highest_state <- states %>%
filter(cases == max(cases, na.rm = TRUE)) %>%
pull(cases)
# The highest number of cases in a state is 11,983,239
# 2.e Which state has the highest ratio of deaths to cases (deaths/cases), as of the most recent date? Make sure to pull() this value
# HINT: You may need to create a new column in order to do this. `state_highest_ratio`
state_highest_ratio <- states %>%
filter(date == max(date, na.rm = TRUE)) %>%
mutate(deaths_per_cases = deaths / cases) %>%
filter(deaths_per_cases == max(deaths_per_cases,
na.rm = TRUE)) %>%
pull(state)
state_lowest_cases <- states %>%
filter(date == max(date, na.rm = TRUE)) %>%
filter(cases == min(cases, na.rm = TRUE)) %>%
pull(state)
county_highest_cases <- counties %>%
filter(cases == max(cases, na.rm = TRUE)) %>%
pull(county)
num_highest_cases_county <- counties %>%
filter(cases == max(cases, na.rm = TRUE)) %>%
pull(cases)
counties <- counties %>%
mutate(location = toupper(paste0(county, ", ", state)))
# 2.j What is the name of the location (county, state) with the highest number of deaths? Make sure to pull() this value `location_most_deaths`
location_most_deaths <- counties %>%
filter(deaths == max(deaths, na.rm = TRUE)) %>%
pull(location)
national <- national %>%
mutate(new_cases = (cases - lag(cases)))
# 2.l Similarly, the `deaths` columns is *not* the number of new deaths per day.
# Add  a new column to the `national` data frame called `new_deaths` that has the number of *new* deaths each day.
# HINT: The dyplr lag() function will be very helpful here.
national <- national %>%
mutate(new_deaths = (deaths - lag(deaths)))
# 2.m What was the date when the most new cases in the U.S. occurred? Make sure to pull() this value `date_most_cases`
date_most_cases <-  national %>%
filter(new_cases == max(new_cases, na.rm = TRUE)) %>%
pull(date)
date_most_deaths <- national %>%
filter(new_deaths == max(new_deaths, na.rm = TRUE)) %>%
pull(date)
# The most new deaths in the U.S. occurred on 2022-11-11
# 2.o How many people died on the date when the most deaths occurred? Make sure to pull() this value `most_deaths`
most_deaths <- national %>%
filter(new_deaths == max(new_deaths, na.rm = TRUE)) %>%
pull(new_deaths)
highest_cases_in_each_state <- counties %>%
group_by(state) %>%
filter(date == max(date, na.rm = TRUE)) %>%
filter(cases == max(cases, na.rm = TRUE)) %>%
pull(location)
lowest_deaths_in_each_state <- counties %>%
group_by(state) %>%
filter(date == max(date, na.rm = TRUE)) %>%
filter(deaths == min(deaths, na.rm = TRUE)) %>%
pull(location)
total_cases_counties <- counties %>%
group_by(date, county) %>%
summarize(county_total_cases = sum(cases))
all_totals <- left_join(total_cases_counties, national, by = "date")
# 4.c Filter the all_totals dataframe to find only the rows where the "county_total_cases" column does not match the "cases" column
# Save as national_county_diff
national_county_diff <- all_totals %>%
filter(county_total_cases != cases)
# 4.d Calculate the number of rows in the national_county_diff dataframe
# Save as num_national_county_diff
num_national_county_diff <- nrow(national_county_diff)
march_new_cases <- national %>%
filter(date == "2020-03-31" | date == "2021-03-31" |
date == "2022-03-31") %>%
pull(date, new_cases)
march_new_cases
lintr:::addin_lint()
lintr:::addin_lint()
data <-  read.csv("Maternal Health Risk Data Set (1).csv", stringsAsFactors = FALSE)
data <-  read.csv("Maternal Health Risk Data Set (1).csv", stringsAsFactors = FALSE)
setwd("C:/Users/jshaf/Documents/INFO201/Final Project/exploratory-analysis-jenineshafi")
data <-  read.csv("Maternal Health Risk Data Set (1).csv", stringsAsFactors = FALSE)
View(data)
View(data)
maternal_risk <- read.csv("Maternal Health Risk Data Set (1).csv", stringsAsFactors = FALSE)
