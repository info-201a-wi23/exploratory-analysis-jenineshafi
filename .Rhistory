filter(cases == max(cases))
nov_highest_cases <- national %>%
filter(date >= "2022-11-01" & date <= "2022-11-30") %>%
filter(cases == max(cases))
dec_highest_cases <- national %>%
filter(date >= "2022-12-01" & date <= "2022-12-31") %>%
filter(cases == max(cases))
year_highest_cases <- data.frame(jan_highest_cases, feb_highest_cases, mar_highest_cases)
View(year_highest_cases)
View(year_highest_cases)
year_highest_cases <- data.frame(2022 = c(jan_highest_cases, feb_highest_cases, mar_highest_cases))
year_highest_cases <- data.frame(year = c(jan_highest_cases, feb_highest_cases, mar_highest_cases))
View(year_highest_cases)
View(year_highest_cases)
df <- merge(jan_highest_cases, feb_highest_cases)
View(df)
View(df)
df <- merge(jan_highest_cases, feb_highest_cases, by = "date")
View(jan_highest_cases)
View(jan_highest_cases)
df <- rbind(jan_highest_cases, feb_highest_cases, mar_highest_cases)
View(df)
View(df)
year_highest_cases <- rbind(jan_highest_cases, feb_highest_cases,
mar_highest_cases, apr_highest_cases,
may_highest_cases, jun_highest_cases,
jul_highest_cases, aug_highest_cases,
sep_highest_cases, oct_highest_cases,
nov_highest_cases, dec_highest_cases)
?rbind
my_answer <- year_highest_cases %>%
filter(cases == max(cases))
pull(date)
View(my_answer)
View(my_answer)
jan_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-01-31") %>%
mutate(jan_cases = summarize(diff(date = "2022-01-01", date = "2022-01-31")))
jan_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-01-31") %>%
mutate(jan_cases = summarize(diff = diff(date = "2022-01-01", date = "2022-01-31")))
jan_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-01-31")
?diff
jan_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-01-31") %>%
summarize(jan_cases = diff(cases))
jan_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-01-31")
jan_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-01-31") %>%
summarize(jan_cases = diff(1:31))
jan_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-01-31")
jan_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-01-31") %>%
summarize(jan_cases = diff(cases, 1:31))
jan_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-01-31")
jan_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-01-31") %>%
summarize(jan_cases = diff(1:31))
jan_highest_cases <- national %>%
filter(date >= "2022-01-01" & date <= "2022-01-31")
march_beginning <- national %>%
filter(date = "2020-03-31" & date = "2021-03-31" & date = "2022-03-31")
march_beginning <- national %>%
filter(date = "2020-03-31")
march_beginning <- national %>%
filter(date == "2020-03-31" & date == "2021-03-31" & date == "2022-03-31")
View(march_beginning)
View(march_beginning)
march_beginning <- national %>%
filter(date == "2020-03-31" | date == "2021-03-31" | date == "2022-03-31")
march_beginning <- national %>%
filter(date == "2020-03-31" | date == "2021-03-31" | date == "2022-03-31")
pull(new_cases)
march_new_cases <- national %>%
filter(date == "2020-03-31" | date == "2021-03-31" | date == "2022-03-31")
pull(new_cases)
march_new_cases <- national %>%
filter(date == "2020-03-31" | date == "2021-03-31" | date == "2022-03-31") %>%
pull(new_cases)
march_new_cases <- national %>%
filter(date == "2020-03-31" | date == "2021-03-31" | date == "2022-03-31") %>%
pull(date, new_cases)
march_new_cases
obs_national <- nrow(national) # There are 1,107 rows in this dataset
obs_states <- nrow(states) # There are 59,086 rows in this dataset
obs_counties <- nrow(counties)
num_features_national <- ncol(national) # There are 5 columns in this dataset
num_features_states <- ncol(states) # There are 5 columns in this dataset
num_features_counties <- ncol(counties)
total_us_cases <- national %>%
filter(date == max(date, na.rm = TRUE)) %>%
pull(cases)
# There were 102,070,172 total U.S. cases
# 2.b How many total COVID-related deaths have there been in the U.S. by the most recent date in the dataset? Make sure to pull() this number `total_us_deaths`
total_us_deaths <- national %>%
filter(date == max(date, na.rm = TRUE)) %>%
pull(deaths)
state_highest_cases <- states %>%
filter(cases == max(cases, na.rm = TRUE)) %>%
pull(state)
# California has the highest number of cases
# 2.d What is the highest number of cases in a state? Make sure to pull() this number `num_highest_state`
num_highest_state <- states %>%
filter(cases == max(cases, na.rm = TRUE)) %>%
pull(cases)
# The highest number of cases in a state is 11,983,239
# 2.e Which state has the highest ratio of deaths to cases (deaths/cases), as of the most recent date? Make sure to pull() this value
# HINT: You may need to create a new column in order to do this. `state_highest_ratio`
state_highest_ratio <- states %>%
filter(date == max(date, na.rm = TRUE)) %>%
mutate(deaths_per_cases = deaths / cases) %>%
filter(deaths_per_cases == max(deaths_per_cases,
na.rm = TRUE)) %>%
pull(state)
state_lowest_cases <- states %>%
filter(date == max(date, na.rm = TRUE)) %>%
filter(cases == min(cases, na.rm = TRUE)) %>%
pull(state)
county_highest_cases <- counties %>%
filter(cases == max(cases, na.rm = TRUE)) %>%
pull(county)
num_highest_cases_county <- counties %>%
filter(cases == max(cases, na.rm = TRUE)) %>%
pull(cases)
counties <- counties %>%
mutate(location = toupper(paste0(county, ", ", state)))
# 2.j What is the name of the location (county, state) with the highest number of deaths? Make sure to pull() this value `location_most_deaths`
location_most_deaths <- counties %>%
filter(deaths == max(deaths, na.rm = TRUE)) %>%
pull(location)
national <- national %>%
mutate(new_cases = (cases - lag(cases)))
# 2.l Similarly, the `deaths` columns is *not* the number of new deaths per day.
# Add  a new column to the `national` data frame called `new_deaths` that has the number of *new* deaths each day.
# HINT: The dyplr lag() function will be very helpful here.
national <- national %>%
mutate(new_deaths = (deaths - lag(deaths)))
# 2.m What was the date when the most new cases in the U.S. occurred? Make sure to pull() this value `date_most_cases`
date_most_cases <-  national %>%
filter(new_cases == max(new_cases, na.rm = TRUE)) %>%
pull(date)
date_most_deaths <- national %>%
filter(new_deaths == max(new_deaths, na.rm = TRUE)) %>%
pull(date)
# The most new deaths in the U.S. occurred on 2022-11-11
# 2.o How many people died on the date when the most deaths occurred? Make sure to pull() this value `most_deaths`
most_deaths <- national %>%
filter(new_deaths == max(new_deaths, na.rm = TRUE)) %>%
pull(new_deaths)
highest_cases_in_each_state <- counties %>%
group_by(state) %>%
filter(date == max(date, na.rm = TRUE)) %>%
filter(cases == max(cases, na.rm = TRUE)) %>%
pull(location)
lowest_deaths_in_each_state <- counties %>%
group_by(state) %>%
filter(date == max(date, na.rm = TRUE)) %>%
filter(deaths == min(deaths, na.rm = TRUE)) %>%
pull(location)
total_cases_counties <- counties %>%
group_by(date, county) %>%
summarize(county_total_cases = sum(cases))
all_totals <- left_join(total_cases_counties, national, by = "date")
# 4.c Filter the all_totals dataframe to find only the rows where the "county_total_cases" column does not match the "cases" column
# Save as national_county_diff
national_county_diff <- all_totals %>%
filter(county_total_cases != cases)
# 4.d Calculate the number of rows in the national_county_diff dataframe
# Save as num_national_county_diff
num_national_county_diff <- nrow(national_county_diff)
march_new_cases <- national %>%
filter(date == "2020-03-31" | date == "2021-03-31" |
date == "2022-03-31") %>%
pull(date, new_cases)
march_new_cases
lintr:::addin_lint()
lintr:::addin_lint()
maternal_risk <- read.csv("Maternal Health Risk Data Set (1).csv", stringsAsFactors = FALSE)
setwd("C:/Users/jshaf/Documents/INFO201/Final Project/exploratory-analysis-jenineshafi")
maternal_risk <- read.csv("Maternal Health Risk Data Set (1).csv", stringsAsFactors = FALSE)
View(maternal_risk)
View(maternal_risk)
library("ggplot2")
ggplot(maternal_risk)+ (aes(fill=condition, x= Age, y=RiskLevel)+geom_point(position = "stack", stat = "identity"))
maternal_risk <- maternal_risk %>%
mutate(person = row_number(Age))
library("dplyr")
maternal_risk <- maternal_risk %>%
mutate(person = row_number(Age))
View(maternal_risk)
View(maternal_risk)
maternal_risk <- read.csv("Maternal Health Risk Data Set (1).csv", stringsAsFactors = F)
?geom_boxplot
ggplot(maternal_risk) +
geom_boxplot(mapping = aes(fill=condition), data = RiskLevel, stat = "boxplot")
ggplot(maternal_risk) +
geom_boxplot(mapping = aes(fill=condition), data = maternal_risk, stat = "boxplot")
ggplot(maternal_risk, aes(person, RiskLevel)) +
geom_boxplot()
maternal_risk <- maternal_risk %>%
mutate(person = row_number(Age))
ggplot(maternal_risk, aes(person, RiskLevel)) +
geom_boxplot()
ggplot(maternal_risk, aes(RiskLevel)) +
geom_boxplot()
ggplot(maternal_risk, aes(x = , y = RiskLevel)) +
geom_boxplot()
ggplot(maternal_risk, aes(x = RiskLevel, y = )) +
geom_boxplot()
ggplot(maternal_risk, aes(x = RiskLevel, y = Age)) +
geom_boxplot()
str_to_title(RiskLevel)
library("ggplot2")
library("dplyr")
library("stringr"
str_to_title(RiskLevel)
library("stringr")
str_to_title(RiskLevel)
str_to_title("high risk")
maternal risk <- maternal_risk %>%
maternal_risk <- maternal_risk %>%
str_to_title("high risk")
maternal_risk <- read.csv("Maternal Health Risk Data Set (1).csv", stringsAsFactors = FALSE)
View(maternal_risk)
View(maternal_risk)
maternal_risk <- maternal_risk %>%
select(str_to_title("high risk"))
ggplot(maternal_risk, aes(x = RiskLevel, y = Age)) +
geom_boxplot()
?geom_boxplot
ggplot(maternal_risk, aes(x = RiskLevel, y = Age)) +
geom_boxplot(aes(color = RiskLevel))
ggplot(maternal_risk, aes(x = RiskLevel, y = Age)) +
geom_boxplot(aes(color = RiskLevel)) +
labs(title = "Age Distribution among each Risk Level Group",
x = "Risk Level",
y = "Age")
ggplot(maternal_risk, aes(x = RiskLevel, y = Age)) +
geom_boxplot(aes(color = RiskLevel)) +
labs(title = "Age Distribution in each Risk Level Group",
x = "Risk Level",
y = "Age")
?geom_boxplot
ggplot(maternal_risk, aes(x = RiskLevel, y = Age)) +
geom_boxplot(aes(color = RiskLevel)) +
labs(title = "Age Distribution within each Risk Level Group",
x = "Risk Level",
y = "Age")
tab <- table(maternal_risk %>%
group_by(RiskLevel) %>%
summarize(sum = sum(RiskLevel)))
?sum
tab <- table(maternal_risk %>%
group_by(RiskLevel) %>%
summarize(sum = sum("RiskLevel")))
tab <- table(maternal_risk %>%
group_by(RiskLevel) %>%
summarize(sum = sum(Age)))
View(tab)
tab <- table(maternal_risk %>%
group_by(RiskLevel) %>%
summarize(mean = mean(Age)))
tab <- table(maternal_risk %>%
group_by(RiskLevel) %>%
summarize(mean = mean(Age), na.rm = TRUE))
tab <- table(maternal_risk %>%
group_by(RiskLevel) %>%
summarize(mean = mean(Age)))
?table
ggplot(maternal_risk, aes(x = RiskLevel, y = Age)) +
geom_boxplot(aes(color = RiskLevel)) +
labs(title = "Age Distribution within each Risk Level Group",
x = "Risk Level",
y = "Age")
?group_by
ggplot(maternal_risk, aes(x = RiskLevel, y = Age)) +
geom_boxplot(aes(color = RiskLevel)) +
labs(title = "Age Distribution within each Risk Level Group",
x = "Risk Level",
y = "Age")
tab <- table(maternal_risk %>%
group_by(RiskLevel) %>%
filter(RiskLevel) %>%
summarize(mean = mean(Age)))
tab <- table(maternal_risk %>%
group_by(RiskLevel) %>%
filter(Age) %>%
summarize(mean = mean(Age)))
tab <- table(maternal_risk %>%
group_by(RiskLevel) %>%
summarize(mean = mean(Age)))
?type
typeof(RiskLevel)
tab <- table(maternal_risk %>%
group_by(RiskLevel) %>%
select(RiskLevel) %>%
summarize(sum = sum(Age)))
tab <- table(maternal_risk %>%
group_by(Age, RiskLevel) %>%
summarize(mean = mean(Age)))
tab <- table(maternal_risk %>%
group_by(RiskLevel) %>%
summarize(mean = mean(Age)))
?table
df <- maternal_risk %>%
select(Age, RiskLevel)
View(df)
View(df)
tab <- table(df %>%
group_by(RiskLevel) %>%
summarize(mean = mean(Age)))
tab <- table(df %>%
group_by(RiskLevel)
tab <- table(df %>%
tab <- table(df %>% group_by(RiskLevel))
tab <- table(df %>% group_by(RiskLevel) %>%
summarize(mean = mean(RiskLevel)))
tab <- table(df %>% group_by(RiskLevel) %>%
summarize(mean = mean(Age)))
tab <- table(df %>% group_by(RiskLevel)
tab <- table(df %>% group_by(RiskLevel))
tab <- table(df %>% group_by(RiskLevel))
tab <- table(df %>% group_by(Age) %>%
summarize(mean = mean(Age)))
tab <- table(df %>% group_by(Age, RiskLevel) %>%
summarize(mean = mean(Age)))
summary_info <- list()
summary_info$Age <- mean(Age)
summary_info <- list()
summary_info$Age <- mean(maternal_risk)
summary_info <- list()
summary_info$Age <- nrow(maternal_risk)
View(summary_info)
View(summary_info)
summary_info <- list()
summary_info$num_observations <- nrow(maternal_risk)
View(summary_info)
View(summary_info)
summary_info <- list()
summary_info$avg_age <- mean(maternal_risk)
summary_info <- list()
summary_info$avg_age <- mean(Age)
summary_info <- list()
summary_info$num_rows <- mean(maternal_risk)
summary_info$max_value <- maternal_risk %>%
filter(age == max(Age, na.rm = TRUE))
summary_info <- list()
summary_info$num_rows <- mean(maternal_risk)
summary_info$max_value <- maternal_risk %>%
filter(Age == max(Age, na.rm = TRUE))
View(summary_info)
View(summary_info)
summary_info <- list()
summary_info$num_rows <- mean(maternal_risk)
summary_info$max_value <- maternal_risk %>%
filter(Age == max(Age, na.rm = TRUE)) %>%
select(Age)
summary_info <- list()
summary_info$num_rows <- mean(maternal_risk)
summary_info$max_value <- maternal_risk %>%
filter(Age == max(Age, na.rm = TRUE))
summary_info <- list()
summary_info$num_rows <- mean(maternal_risk)
summary_info$max_value <- maternal_risk %>%
filter(Age == max(Age, na.rm = TRUE))
summary_info <- list()
summary_info$num_rows <- nrow(maternal_risk)
summary_info$max_value <- maternal_risk %>%
filter(Age == max(Age, na.rm = TRUE)) %>%
select(Age)
tab <- table(summary_info)
summary_info <- list()
summary_info$num_rows <- nrow(maternal_risk)
summary_info$max_value <- maternal_risk %>%
filter(Age == max(Age, na.rm = TRUE))
tab <- table(summary_info)
summary_info <- list()
summary_info$max_value <- maternal_risk %>%
filter(Age == max(Age, na.rm = TRUE))
tab <- table(summary_info)
summary_info <- list()
summary_info$num_rows <- nrow(maternal_risk)
summary_info$max_value <- maternal_risk %>%
filter(Age == max(Age, na.rm = TRUE))
summary_info <- list()
summary_info$num_rows <- nrow(maternal_risk)
summary_info$max_value <- maternal_risk
summary_info <- list()
summary_info$num_rows <- nrow(maternal_risk)
summary_info$max_value <- maternal_risk %>%
filter(Age == max(Age, na.rm = TRUE))
summary_info <- list()
summary_info$num_rows <- nrow(maternal_risk)
summary_info$max_value <- maternal_risk
summary_info[["max_value"]][["Age"]]
summary_info <- list()
summary_info$num_rows <- nrow(maternal_risk)
summary_info$max_value <- maternal_risk %>%
group_by(RiskLevel)
summary_info <- list()
summary_info$num_rows <- nrow(maternal_risk)
summary_info$max_value <- maternal_risk %>%
group_by(RiskLevel)
summary_info <- list()
summary_info$num_rows <- nrow(maternal_risk)
summary_info$max_Age <- maternal_risk %>%
filter(Age == max(Age, na.rm = TRUE)) %>%
select(Age)
summary_info$avg_age <- maternal_risk %>%
select(Age) %>%
summarize(mean = mean(Age))
summary_info <- list()
summary_info$num_rows <- nrow(maternal_risk)
summary_info$max_Age <- maternal_risk %>%
filter(Age == max(Age, na.rm = TRUE)) %>%
select(Age)
summary_info$avg_age <- maternal_risk %>%
select(Age) %>%
summarize(mean = mean(Age))
summary_info$avg_BS <- maternal_risk %>%
select(BS) %>%
summarize(mean = mean(BS))
summary_info <- list()
summary_info$num_rows <- nrow(maternal_risk)
summary_info$max_Age <- maternal_risk %>%
filter(Age == max(Age, na.rm = TRUE)) %>%
select(Age)
summary_info$avg_age <- maternal_risk %>%
select(Age) %>%
summarize(mean = mean(Age))
summary_info$avg_BS <- maternal_risk %>%
select(BS) %>%
summarize(mean = mean(BS))
summary_info$avg_HeartRate <- maternal_risk %>%
select(HeartRate) %>%
summarize(mean = mean(HeartRate))
tab <- table(summary_info)
library("knitr")
kable(summary_info,
col.name = c('Number of Rows',
'Max Age',
'Mean Age',
'Blood Sugar',
'Heart Rate'))
kable(summary_info)
kable(summary_info,
col.names = c('Number of Rows',
'Max Age',
'Mean Age',
'Blood Sugar',
'Heart Rate'))
summary_info <- list()
summary_info$num_rows <- nrow(maternal_risk)
summary_info$max_Age <- maternal_risk %>%
filter(Age == max(Age, na.rm = TRUE)) %>%
select(Age)
summary_info$avg_age <- maternal_risk %>%
select(Age) %>%
summarize(mean = mean(Age))
summary_info$avg_BS <- maternal_risk %>%
select(BS) %>%
summarize(mean = mean(BS))
summary_info$avg_HeartRate <- maternal_risk %>%
select(HeartRate) %>%
summarize(mean = mean(HeartRate))
kable(summary_info,
col.names = c('Number of Rows',
'Max Age',
'Mean Age',
'Blood Sugar',
'Heart Rate'))
summary_stats <- list()
summary_info$num_rows <- nrow(maternal_risk)
summary_info$max_Age <- maternal_risk %>%
filter(Age == max(Age, na.rm = TRUE))
tab <- table(summary_info)
summary_info <- list()
summary_info$min_Age <- maternal_risk %>%
filter(Age == min(Age, na.rm = TRUE)) %>%
select(Age)
summary_info$max_Age <- maternal_risk %>%
filter(Age == max(Age, na.rm = TRUE)) %>%
select(Age)
summary_info$avg_age <- maternal_risk %>%
select(Age) %>%
summarize(mean = mean(Age))
summary_info$avg_BS <- maternal_risk %>%
select(BS) %>%
summarize(mean = mean(BS))
summary_info$avg_HeartRate <- maternal_risk %>%
select(HeartRate) %>%
summarize(mean = mean(HeartRate))
kable(summary_info,
col.names = c('Min Age',
'Max Age',
'Mean Age',
'Blood Sugar',
'Heart Rate'))
summary_info$min_Age <- maternal_risk %>%
filter(Age == min(Age, na.rm = TRUE))
summary_info$min_Age <- maternal_risk %>%
filter(Age == min(Age, na.rm = TRUE)) %>%
select(Age)
ggplot(maternal_risk, aes(x = RiskLevel, y = Age)) +
geom_boxplot(aes(color = RiskLevel)) +
labs(title = "Age Distribution within each Risk Level Group",
x = "Risk Level",
y = "Age")
